package instructions

import (
	"log"

	"jvm/pkg/global"
	"jvm/pkg/instructions/base"
	"jvm/pkg/instructions/comparisons"
	"jvm/pkg/instructions/constants"
	"jvm/pkg/instructions/control"
	"jvm/pkg/instructions/conversions"
	"jvm/pkg/instructions/extend"
	"jvm/pkg/instructions/loads"
	"jvm/pkg/instructions/math"
	"jvm/pkg/instructions/references"
	"jvm/pkg/instructions/reserved"
	"jvm/pkg/instructions/stack"
	"jvm/pkg/instructions/stores"
)

func New(opCode uint8) base.Instruction {
	switch opCode {
	case global.OpcNop:
		return &constants.NOP{}
	case global.OpcAConstNull:
		return &constants.AConstNull{}
	case global.OpcIConstM1:
		return &constants.IConstM1{}
	case global.OpcIConst0:
		return &constants.IConst0{}
	case global.OpcIConst1:
		return &constants.IConst1{}
	case global.OpcIConst2:
		return &constants.IConst2{}
	case global.OpcIConst3:
		return &constants.IConst3{}
	case global.OpcIConst4:
		return &constants.IConst4{}
	case global.OpcIConst5:
		return &constants.IConst5{}
	case global.OpcLConst0:
		return &constants.LConst0{}
	case global.OpcLConst1:
		return &constants.LConst1{}
	case global.OpcFConst0:
		return &constants.FConst0{}
	case global.OpcFConst1:
		return &constants.FConst1{}
	case global.OpcFConst2:
		return &constants.FConst2{}
	case global.OpcDConst0:
		return &constants.DConst0{}
	case global.OpcDConst1:
		return &constants.DConst1{}
	case global.OpcBIPush:
		return &constants.BIPush{}
	case global.OpcSIPush:
		return &constants.SIPush{}
	case global.OpcLDC:
		return &constants.LDC{}
	case global.OpcLDCW:
		return &constants.LDCW{}
	case global.OpcLDC2W:
		return &constants.LDC2W{}
	case global.OpcILoad:
		return &loads.ILoad{}
	case global.OpcLLoad:
		return &loads.LLoad{}
	case global.OpcFLoad:
		return &loads.FLoad{}
	case global.OpcDLoad:
		return &loads.DLoad{}
	case global.OpcALoad:
		return &loads.ALoad{}
	case global.OpcILoad0:
		return &loads.ILoad0{}
	case global.OpcILoad1:
		return &loads.ILoad1{}
	case global.OpcILoad2:
		return &loads.ILoad2{}
	case global.OpcILoad3:
		return &loads.ILoad3{}
	case global.OpcLLoad0:
		return &loads.LLoad0{}
	case global.OpcLLoad1:
		return &loads.LLoad1{}
	case global.OpcLLoad2:
		return &loads.LLoad2{}
	case global.OpcLLoad3:
		return &loads.LLoad3{}
	case global.OpcFLoad0:
		return &loads.FLoad0{}
	case global.OpcFLoad1:
		return &loads.FLoad1{}
	case global.OpcFLoad2:
		return &loads.FLoad2{}
	case global.OpcFLoad3:
		return &loads.FLoad3{}
	case global.OpcDLoad0:
		return &loads.DLoad0{}
	case global.OpcDLoad1:
		return &loads.DLoad1{}
	case global.OpcDLoad2:
		return &loads.DLoad2{}
	case global.OpcDLoad3:
		return &loads.DLoad3{}
	case global.OpcALoad0:
		return &loads.ALoad0{}
	case global.OpcALoad1:
		return &loads.ALoad1{}
	case global.OpcALoad2:
		return &loads.ALoad2{}
	case global.OpcALoad3:
		return &loads.ALoad3{}
	case global.OpcIALoad:
		return &loads.IALoad{}
	case global.OpcLALoad:
		return &loads.LALoad{}
	case global.OpcFALoad:
		return &loads.FALoad{}
	case global.OpcDALoad:
		return &loads.DALoad{}
	case global.OpcAALoad:
		return &loads.AALoad{}
	case global.OpcBALoad:
		return &loads.BALoad{}
	case global.OpcCALoad:
		return &loads.CALoad{}
	case global.OpcSALoad:
		return &loads.SALoad{}
	case global.OpcIStore:
		return &stores.IStore{}
	case global.OpcLStore:
		return &stores.LStore{}
	case global.OpcFStore:
		return &stores.FStore{}
	case global.OpcDStore:
		return &stores.DStore{}
	case global.OpcAStore:
		return &stores.AStore{}
	case global.OpcIStore0:
		return &stores.IStore0{}
	case global.OpcIStore1:
		return &stores.IStore1{}
	case global.OpcIStore2:
		return &stores.IStore2{}
	case global.OpcIStore3:
		return &stores.IStore3{}
	case global.OpcLStore0:
		return &stores.LStore0{}
	case global.OpcLStore1:
		return &stores.LStore1{}
	case global.OpcLStore2:
		return &stores.LStore2{}
	case global.OpcLStore3:
		return &stores.LStore3{}
	case global.OpcFStore0:
		return &stores.FStore0{}
	case global.OpcFStore1:
		return &stores.FStore1{}
	case global.OpcFStore2:
		return &stores.FStore2{}
	case global.OpcFStore3:
		return &stores.FStore3{}
	case global.OpcDStore0:
		return &stores.DStore0{}
	case global.OpcDStore1:
		return &stores.DStore1{}
	case global.OpcDStore2:
		return &stores.DStore2{}
	case global.OpcDStore3:
		return &stores.DStore3{}
	case global.OpcAStore0:
		return &stores.AStore0{}
	case global.OpcAStore1:
		return &stores.AStore1{}
	case global.OpcAStore2:
		return &stores.AStore2{}
	case global.OpcAStore3:
		return &stores.AStore3{}
	case global.OpcIAStore:
		return &stores.IAStore{}
	case global.OpcLAStore:
		return &stores.LAStore{}
	case global.OpcFAStore:
		return &stores.FAStore{}
	case global.OpcDAStore:
		return &stores.DAStore{}
	case global.OpcAAStore:
		return &stores.AAStore{}
	case global.OpcBAStore:
		return &stores.BAStore{}
	case global.OpcCAStore:
		return &stores.CAStore{}
	case global.OpcSAStore:
		return &stores.SAStore{}
	case global.OpcPOP:
		return &stack.POP{}
	case global.OpcPOP2:
		return &stack.POP2{}
	case global.OpcDup:
		return &stack.Dup{}
	case global.OpcDupX1:
		return &stack.DupX1{}
	case global.OpcDupX2:
		return &stack.DupX2{}
	case global.OpcDup2:
		return &stack.Dup2{}
	case global.OpcDup2X1:
		return &stack.Dup2X1{}
	case global.OpcDup2X2:
		return &stack.Dup2X2{}
	case global.OpcSwap:
		return &stack.Swap{}
	case global.OpcIAdd:
		return &math.IAdd{}
	case global.OpcLAdd:
		return &math.LAdd{}
	case global.OpcFAdd:
		return &math.FAdd{}
	case global.OpcDAdd:
		return &math.DAdd{}
	case global.OpcISub:
		return &math.ISub{}
	case global.OpcLSub:
		return &math.LSub{}
	case global.OpcFSub:
		return &math.FSub{}
	case global.OpcDSub:
		return &math.DSub{}
	case global.OpcIMul:
		return &math.IMul{}
	case global.OpcLMul:
		return &math.LMul{}
	case global.OpcFMul:
		return &math.FMul{}
	case global.OpcDMul:
		return &math.DMul{}
	case global.OpcIDiv:
		return &math.IDiv{}
	case global.OpcLDiv:
		return &math.LDiv{}
	case global.OpcFDiv:
		return &math.FDiv{}
	case global.OpcDDiv:
		return &math.DDiv{}
	case global.OpcIRem:
		return &math.IRem{}
	case global.OpcLRem:
		return &math.LRem{}
	case global.OpcFRem:
		return &math.FRem{}
	case global.OpcDRem:
		return &math.DRem{}
	case global.OpcINeg:
		return &math.INeg{}
	case global.OpcLNeg:
		return &math.LNeg{}
	case global.OpcFNeg:
		return &math.FNeg{}
	case global.OpcDNeg:
		return &math.DNeg{}
	case global.OpcIShL:
		return &math.IShL{}
	case global.OpcLShL:
		return &math.LShL{}
	case global.OpcIShR:
		return &math.IShR{}
	case global.OpcLShR:
		return &math.LShR{}
	case global.OpcIUShR:
		return &math.IUShR{}
	case global.OpcLUShR:
		return &math.LUShR{}
	case global.OpcIAnd:
		return &math.IAnd{}
	case global.OpcLAnd:
		return &math.LAnd{}
	case global.OpcIOr:
		return &math.IOr{}
	case global.OpcLOr:
		return &math.LOr{}
	case global.OpcIXOr:
		return &math.IXOr{}
	case global.OpcLXOr:
		return &math.LXOr{}
	case global.OpcIInc:
		return &math.IInc{}
	case global.OpcI2L:
		return &conversions.I2L{}
	case global.OpcI2F:
		return &conversions.I2F{}
	case global.OpcI2D:
		return &conversions.I2D{}
	case global.OpcL2I:
		return &conversions.L2I{}
	case global.OpcL2F:
		return &conversions.L2F{}
	case global.OpcL2D:
		return &conversions.L2D{}
	case global.OpcF2I:
		return &conversions.F2I{}
	case global.OpcF2L:
		return &conversions.F2L{}
	case global.OpcF2D:
		return &conversions.F2D{}
	case global.OpcD2I:
		return &conversions.D2L{}
	case global.OpcD2L:
		return &conversions.D2L{}
	case global.OpcD2F:
		return &conversions.D2F{}
	case global.OpcI2B:
		return &conversions.I2B{}
	case global.OpcI2C:
		return &conversions.I2C{}
	case global.OpcI2S:
		return &conversions.I2S{}
	case global.OpcLCmp:
		return &comparisons.LCmp{}
	case global.OpcFCmpL:
		return &comparisons.FCmpL{}
	case global.OpcFCmpG:
		return &comparisons.FCmpG{}
	case global.OpcDCmpL:
		return &comparisons.DCmpL{}
	case global.OpcDCmpG:
		return &comparisons.DCmpG{}
	case global.OpcIfEQ:
		return &comparisons.IfEQ{}
	case global.OpcIfNE:
		return &comparisons.IfNE{}
	case global.OpcIfLT:
		return &comparisons.IfLT{}
	case global.OpcIfGE:
		return &comparisons.IfGE{}
	case global.OpcIfGT:
		return &comparisons.IfGT{}
	case global.OpcIfLE:
		return &comparisons.IfLE{}
	case global.OpcIfICmpEQ:
		return &comparisons.IfICmpEQ{}
	case global.OpcIfICmpNE:
		return &comparisons.IfICmpNE{}
	case global.OpcIfICmpLT:
		return &comparisons.IfICmpLT{}
	case global.OpcIfICmpGE:
		return &comparisons.IfICmpGE{}
	case global.OpcIfICmpGT:
		return &comparisons.IfICmpGT{}
	case global.OpcIfICmpLE:
		return &comparisons.IfICmpLE{}
	case global.OpcIfACmpEQ:
		return &comparisons.IfACmpEQ{}
	case global.OpcIfACmpNE:
		return &comparisons.IfACmpNE{}
	case global.OpcGOTO:
		return &control.GOTO{}
	case global.OpcJSR:
		return nil
	case global.OpcRet:
		log.Panic("ret not found")
		return nil
	case global.OpcTableSwitch:
		return &control.TableSwitch{}
	case global.OpcLookupSwitch:
		return &control.LookupSwitch{}
	case global.OpcIReturn:
		return &control.IReturn{}
	case global.OpcLReturn:
		return &control.LReturn{}
	case global.OpcFReturn:
		return &control.FReturn{}
	case global.OpcDReturn:
		return &control.DReturn{}
	case global.OpcAReturn:
		return &control.AReturn{}
	case global.OpcReturn:
		return &control.Return{}
	case global.OpcGetStatic:
		return &references.GetStatic{}
	case global.OpcPutStatic:
		return &references.PutStatic{}
	case global.OpcGetField:
		return &references.GetField{}
	case global.OpcPutField:
		return &references.PutField{}
	case global.OpcInvokeVirtual:
		return &references.InvokeVirtual{}
	case global.OpcInvokeSpecial:
		return &references.InvokeSpecial{}
	case global.OpcInvokeStatic:
		return &references.InvokeStatic{}
	case global.OpcInvokeInterface:
		return &references.InvokeInterface{}
	case global.OpcInvokeDynamic:
		return nil
	case global.OpcNew:
		return &references.New{}
	case global.OpcNewArray:
		return &references.NewArray{}
	case global.OpcANewArray:
		return &references.ANewArray{}
	case global.OpcArrayLength:
		return &references.ArrayLength{}
	case global.OpcAThrow:
		return &references.AThrow{}
	case global.OpcCheckCast:
		return &references.CheckCast{}
	case global.OpcInstanceOf:
		return &references.InstanceOf{}
	case global.OpcMonitorEnter:
		return nil
	case global.OpcMonitorExit:
		return nil
	case global.OpcWide:
		return &extend.Wide{}
	case global.OpcMultiANewArray:
		return &extend.MultiANewArray{}
	case global.OpcIfNull:
		return &extend.IfNull{}
	case global.OpcIfNonNull:
		return &extend.IfNonNull{}
	case global.OpcGotoW:
		return &extend.GOTOW{}
	case global.OpcJsrW:
		return nil
	case global.OpcBreakPoint:
		return nil
	case global.OpcImpDep1:
		return &reserved.ImpDep1{}
	case global.OpcImpDep2:
		return nil
	default:
		log.Panicf("当前指令未实现：%X", opCode)
		return nil
	}
	return nil
}
